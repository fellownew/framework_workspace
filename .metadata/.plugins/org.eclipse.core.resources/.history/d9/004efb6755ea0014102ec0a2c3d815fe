<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mybatis.hr.dao.consumer">

	<sql id="consumer-select">
		select id,password,name,email,phone_number,mileage from consumer
	</sql>

	<!-- 
		insertCustomer()
		updateCustomer()
		deleteCustomerById() - 고객 ID로 고객 삭제
		selectCustomerById() - 고객 ID로 고객조회
		selectCustomerByName() - 고객이름으로 고객조회
		selectCustomerByEmail() - 이메일로 고객조회
		selectCustomerByMileageRange() - 마일리지의 범위로 고객조회
		TestCustomer-main() -> CustomerDAO 
	-->
	
	<insert id="insertconsumer" parameterType="consumer">
		insert into department(department_id,department_name,location) values(#{departmentId},#{departmentName},#{location})
	</insert>
	
	<update id="updateconsumer" parameterType="consumer">
		update department set department_name=#{departmentName},location=#{location,jdbcType=VARCHAR} where department_id=#{departmentId}
	</update>
	
	<delete id="deleteconsumerById" parameterType="int" >
		delete from department where department_id=#{value}
	</delete>
	
	<resultMap type="consumer" id="consumer-resultmap">
		<!-- column : 조회컬럼-resultset기준, property : 조회값을 넣을 setter -->
		<id column="id" property="ID"/><!-- pk 조회값 설정 -->
		<result column="department_name" property="departmentName"/>
		<result column="location" property="location"/>
	</resultMap>

	<select id="selectconsumerById" parameterType="int" resultType="java.util.HashMap">
		select department_id,department_name,location from department where department_id=#{value} --?가 하나일경우(literal) 값내의 매핑값은 마음대로 가능.	
	</select>
	
	<select id="selectconsumerByName" parameterType="string" resultMap="department-resultmap">
		<include refid="department-select"/>
		where department_name=#{value}
	</select>
	
	<!-- 조회 결과를 넣을 객체의 생성자를 통해 넣는 외부매핑 설정 -->
	<resultMap type="department" id="consumer-constructor-resultmap">
		<constructor>
			<idArg column="department_id" javaType="_int"/><!-- 생성자 1번 매개변수에 department_id 조회값을 넣어라. -->
			<arg column="department_name" javaType="string"/>
			<arg column="location" javaType="string"/>
		</constructor>
	</resultMap>
	
	<select id="selectDepartmentByLocation" parameterType="string" resultMap="consumer-constructor-resultmap">
		<include refid="department-select"/>
		where location like '%'||#{value}||'%'
	</select>
	



</mapper>
